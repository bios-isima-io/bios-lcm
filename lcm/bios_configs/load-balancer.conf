proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_404 non_idempotent;
proxy_next_upstream_tries 4;
proxy_next_upstream_timeout 600s;
proxy_connect_timeout 10s;
proxy_read_timeout 600s;
proxy_send_timeout 600s;
send_timeout 600s;

# Required when upstream is returing larger header
proxy_buffers 16 4k;
proxy_buffer_size 32k;
proxy_busy_buffers_size 32k;

#proxy issue
proxy_cache_use_stale updating;

# revalidate option cache if header If-Modified-Since is present
proxy_cache_revalidate on;

#cache settings
proxy_cache_path /var/ext_resources/cache levels=1:2 keys_zone=bios:10m max_size=1g inactive=60m use_temp_path=off;
proxy_cache_methods GET HEAD POST;
proxy_cache_key "$scheme-$request_method-$host-$request_uri-$http_x_user_name-$request_body-$content_length";
proxy_cache_valid 200 302 5m;
proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504 http_404;
add_header X-Cache-Status $upstream_cache_status;

##
# Logging Settings
##
log_format upstream_info '"$time_local", "$msec", "$remote_addr", '
                         '$request_method, "$request_uri", $server_protocol, $status, $bytes_sent, '
                         '"$http_referer", '
                         '$upstream_status, "$upstream_addr", '
                         '$request_time, $upstream_response_time, $upstream_response_length, '
                         '$upstream_connect_time, $upstream_header_time, '
                         '$http_x_tenant_name, $http_x_user_name';

access_log /var/log/nginx/bios.log upstream_info;
error_log /var/log/nginx/error.log info;

limit_conn_zone $binary_remote_addr zone=perip:10m;
limit_conn_zone $server_name zone=perserver:10m;

upstream bios_servers_unsecure {
    zone bios_servers_unsecure 64k;

    MAIN_UPSTREAM_UNSECURE_SERVERS
    BACKUP_UPSTREAM_UNSECURE_SERVERS
}

upstream bios_insert_servers {
    zone bios_insert_servers 64k;

    MAIN_UPSTREAM_BIOS_INSERT_SERVERS
    BACKUP_UPSTREAM_BIOS_INSERT_SERVERS

    # BIOS_STORAGE_UPSTREAM_ANCHOR
}

upstream bios_servers {
    zone bios_servers 64k;

    MAIN_UPSTREAM_BIOS_SERVERS
    BACKUP_UPSTREAM_BIOS_SERVERS

    # BIOS_STORAGE_UPSTREAM_ANCHOR
}

# BIOS_HUB_UPSTREAM_ANCHOR

# BIOS_APPS_UPSTREAMS_ANCHOR


server {
    listen LB_HTTP_PORT;

    limit_conn perip 10000;
    limit_conn perserver 10000;
    client_max_body_size 100m;
    client_body_buffer_size 100m;

    return 301 https://$host$request_uri;
}

# $$ Look at the following directives in future
# api write=on
# auth_basic
# auth_basic_user_file
# auth_jwt
# auth_http_XYZ
# auth_request
# deny
# allow
# expires
# satisfy

# geoip_XYZ parameters

# grpc_XYZ parameters

# proxy_XYZ params (the cache and SSL parameters maybe important to look now)

# limit_XYZ directives


server {
    listen LB_HTTPS_PORT ssl;
    http2 on;
    server_name CLUSTER_DNS_NAME;
    ssl_certificate /var/ext_resources/web.cert.pem;
    ssl_certificate_key /var/ext_resources/web.key.pem;

    limit_conn perip 10000;
    limit_conn perserver 10000;
    client_max_body_size 100m;
    client_body_buffer_size 100m;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 1;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/javascript text/css application/javascript application/json;
    proxy_http_version 1.1;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Real-PORT $remote_port;
    proxy_cache_bypass $http_x_invalidate_cache;
    proxy_cookie_path ~^(.+)$ "$1;Domain=CLUSTER_DNS_NAME;SameSite=None";

    ## Deny unsupported paths, uri's and suffixes
    location ~* ^/(private|manager|Autodiscover|mgmt|install|jars|rest|run|search|sitecore|templates|upload) {
        deny all;
    }
    location ~* .(aspx?|bash|bak?|cfg|cgi|dll|exe|git|hg|ini|jsp|php|mdb|svn|swp|tar|rdf|env)$ {
        deny all;
    }
    location ~* (bootstrap|etc\/passwd|plugin|public|servlet|servlets|upload|\/nmap|j_security_check|j_spring_security_check|install) {
        deny all;
    }
    ##
    location /beta {
        alias /var/www/beta;
    }
    location ~ ^/bios/.+/signals/.+/events/.+$ {
        access_log /var/log/nginx/bios_inserts.log upstream_info;
        proxy_pass https://bios_insert_servers;
        # BIOS_STORAGE_PROXY_ANCHOR
    }
    location ~ ^/bios/.+/events/bulk$ {
        access_log /var/log/nginx/bios_inserts.log upstream_info;
        proxy_pass https://bios_insert_servers;
        # BIOS_STORAGE_PROXY_ANCHOR
    }
    location ~ ^/bios/.+/contexts/.+/entries(/delete)?$ {
        access_log /var/log/nginx/bios_inserts.log upstream_info;
        proxy_pass https://bios_insert_servers;
        # BIOS_STORAGE_PROXY_ANCHOR
    }
    location ~ ^/bios/(.+)/select$ {
        proxy_pass https://bios_servers;
        proxy_cache bios;
        # BIOS_STORAGE_PROXY_ANCHOR
    }
    location ~ ^/bios/(.+)/insights$ {
        proxy_pass https://bios_servers;
        proxy_cache bios;
        # BIOS_STORAGE_PROXY_ANCHOR
    }
    location ~ ^/bios/(.+)/reports {
        proxy_pass https://bios_servers;
        proxy_cache bios;
        access_log /var/log/nginx/bios_reports.log upstream_info;
        # BIOS_STORAGE_PROXY_ANCHOR
    }
    location ~ ^/bios/(.+)/auth/(.+) {
        proxy_pass https://bios_servers;
        access_log /var/log/nginx/bios_auth.log upstream_info;
        # BIOS_STORAGE_PROXY_ANCHOR
    }
    location /bios {
        #proxy_cache bios;
        proxy_pass https://bios_servers;
        # BIOS_STORAGE_PROXY_ANCHOR
    }

    location /robots.txt {
        alias /var/www/robots.txt;
    }

    location /downloads {
        alias /var/www/downloads/;
    }

    location /docs {
        access_log /var/log/nginx/bios_docs.log upstream_info;
        root /var/www/tf/ss/;
        try_files $uri $uri/ /index.html;
    }

    # BIOS_HUB_LOCATIONS_ANCHOR

    # BIOS_APPS_LOCATIONS_ANCHOR


    location / {
        root /var/www/tf/ss/dist;
        try_files $uri $uri/ /index.html;

        error_page  405     =200 $uri;
    }
}
include /var/ext_resources/conf.d/block_ip.conf;
